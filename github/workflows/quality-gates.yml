name: Quality Gates

on:
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint with quality metrics
        run: |
          npm run lint -- --format json --output-file eslint-report.json || true

      - name: Run type checking
        run: npx tsc --noEmit --pretty false > tsc-report.txt 2>&1 || true

      - name: Test coverage check
        run: |
          npm run test:coverage
          COVERAGE=$(cat coverage/coverage-summary.json | jq -r '.total.lines.pct')
          echo "Coverage: $COVERAGE%"
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "❌ Coverage is below 80%"
            exit 1
          else
            echo "✅ Coverage meets requirements"
          fi

      - name: Bundle size check
        run: |
          npm run build
          BUNDLE_SIZE=$(du -sb dist/ | cut -f1)
          MAX_SIZE=5242880 # 5MB
          if [ "$BUNDLE_SIZE" -gt "$MAX_SIZE" ]; then
            echo "❌ Bundle size ($BUNDLE_SIZE bytes) exceeds limit ($MAX_SIZE bytes)"
            exit 1
          else
            echo "✅ Bundle size is acceptable"
          fi

      - name: Performance budget check
        run: |
          npm run build
          npx bundlesize

      - name: Accessibility audit
        run: |
          npm run build
          npx serve -s dist &
          sleep 5
          npx axe-cli http://localhost:3000 --exit
          pkill -f serve

  sonarcloud:
    runs-on: ubuntu-latest
    if: github.repository_owner != 'dependabot[bot]'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  lighthouse:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Serve application
        run: |
          npx serve -s dist -p 3000 &
          sleep 5

      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.12.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
